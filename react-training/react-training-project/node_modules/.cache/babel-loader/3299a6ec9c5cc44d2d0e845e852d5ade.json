{"ast":null,"code":"var _jsxFileName = \"D:\\\\testRepo\\\\react-training\\\\react-training-project\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { CardList } from './components/card-list/card-list';\nimport './App.scss';\nimport { SearchBox } from './components/search-box/search-box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [searchKey, setSearchKey] = useState('');\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => setUsers(users));\n  }, []);\n  useEffect(() => {\n    if (searchKey) {\n      setUsers(users.filter(x => x.id === parseInt(searchKey)));\n    } else {\n      fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => setUsers(users));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [searchKey]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      handleChange: event => setSearchKey(event.target.value),\n      placeholder: \" Search users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      items: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XmUX741uzSIbpKJq5ttMNp0Obgs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/testRepo/react-training/react-training-project/src/App.tsx"],"names":["React","useState","useEffect","CardList","SearchBox","App","users","setUsers","searchKey","setSearchKey","fetch","then","response","json","filter","x","id","parseInt","event","target","value"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,OAAO,YAAP;AACA,SAASC,SAAT,QAA0B,oCAA1B;;;AAEA,SAASC,GAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAS,EAAT,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQL,KAAK,IAAIC,QAAQ,CAACD,KAAD,CAFzB;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,SAAJ,EAAe;AACbD,MAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASC,QAAQ,CAACT,SAAD,CAAnC,CAAD,CAAR;AACD,KAFD,MAEO;AACLE,MAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQL,KAAK,IAAIC,QAAQ,CAACD,KAAD,CAFzB;AAGD,KAPa,CAQd;;AACD,GATQ,EASN,CAACE,SAAD,CATM,CAAT;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AACE,MAAA,YAAY,EAAEU,KAAK,IAAIT,YAAY,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CADrC;AAEE,MAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEd;AAAjB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA/BQD,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import { User } from './models/User'\nimport React, { useState } from 'react'\nimport { useEffect } from 'react'\nimport { CardList } from './components/card-list/card-list'\nimport './App.scss'\nimport { SearchBox } from './components/search-box/search-box'\n\nfunction App () {\n  const [users, setUsers] = useState<User[]>([])\n  const [searchKey, setSearchKey] = useState<string>('')\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => setUsers(users))\n  }, [])\n\n  useEffect(() => {\n    if (searchKey) {\n      setUsers(users.filter(x => x.id === parseInt(searchKey)))\n    } else {\n      fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => setUsers(users))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchKey])\n\n  return (\n    <div className='App'>\n      <h1>User list</h1>\n      <SearchBox\n        handleChange={event => setSearchKey(event.target.value)}\n        placeholder=' Search users'\n      ></SearchBox>\n      <CardList items={users}></CardList>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}